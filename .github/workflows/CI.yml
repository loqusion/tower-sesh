name: CI

on:
  push:
    branches:
      - main
      - ci*
  pull_request: {}

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short
  # Pin a specific miri version
  rust_miri_nightly: nightly-2025-03-16

jobs:
  ### check jobs ###

  check:
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Check
        run: cargo check --workspace --tests --benches

  style:
    name: cargo fmt
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: rustfmt
        run: cargo fmt --all --check

  hack-check:
    name: cargo hack check
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-hack
      - name: Check feature powerset
        run: |
          cargo hack check --rust-version --workspace --ignore-private --exclude tower-sesh-store-redis --feature-powerset --optional-deps
          cargo hack check --rust-version --package tower-sesh-store-redis --feature-powerset --exclude-features async-std-comp --features tokio-comp

  minimal-versions:
    name: cargo minimal-versions
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - name: Check minimal versions
        run: |
          # TODO: Add --detach-path-deps when pre-release is over
          cargo minimal-versions check --workspace --ignore-private --exclude tower-sesh-store-redis --all-features
          cargo minimal-versions check --package tower-sesh-store-redis --features test-util

  ### test jobs

  test:
    name: "cargo test (${{ matrix.rust }})"
    needs: check
    strategy:
      matrix:
        rust: [stable, beta, nightly]
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      REDIS_URL: redis://localhost:6379
    services:
      # Required for tower-sesh-store-redis
      redis:
        image: redis:7.4.1-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: "install Rust ${{ matrix.rust }}"
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Run tests
        run: cargo nextest run --profile ci --workspace --features test-util
      - name: Run doctests
        run: cargo test --doc --workspace --all-features

  test-caching-store:
    name: "cargo test caching store (${{ matrix.rust }})"
    needs: check
    strategy:
      matrix:
        rust: [stable, beta, nightly]
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      REDIS_URL: redis://localhost:6379
    services:
      # Required for tower-sesh-store-redis
      redis:
        image: redis:7.4.1-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: "install Rust ${{ matrix.rust }}"
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Run tests
        run: RUSTFLAGS="--cfg tower_sesh_test_caching_store" cargo nextest run --profile ci --features test-util

  miri-lib:
    name: "miri test --lib"
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_miri_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_miri_nightly }}
          components: miri
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: miri
        run: |
          cargo miri nextest run --profile ci --workspace --lib --features test-util
        env:
          MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-strict-provenance

  miri-test:
    name: "miri test --tests"
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_miri_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_miri_nightly }}
          components: miri
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: miri
        run: |
          cargo miri nextest run --profile ci --package tower-sesh --tests --features test-util
        env:
          MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-strict-provenance

  miri-doc:
    name: "miri test --doc"
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.rust_miri_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.rust_miri_nightly }}
          components: miri
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: miri
        run: |
          cargo miri test --workspace --doc --all-features
        env:
          MIRIFLAGS: -Zmiri-disable-isolation -Zmiri-strict-provenance
